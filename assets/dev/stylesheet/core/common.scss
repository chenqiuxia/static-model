/*reset css start*/
blockquote,body,button,caption,dd,div,dl,dt,fieldset,figure,form,h1,h2,h3,h4,h5,h6,hr,html,input,legend,li,menu,ol,p,pre,table,td,textarea,th,ul {
  margin: 0;
  padding: 0;
  outline: 0;
}

address,article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section {
  display: block;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

caption,th {
  text-align: left;
}

abbr,body,fieldset,html,iframe,img {
  border: 0;
}

address,cite,dfn,em,i,var {
  font-style: normal;
}

[hidefocus],summary {
  outline: 0;
}

li {
  list-style: none;
}

h1,h2,h3,h4,h5,h6,small {
  font-size: 100%;
}

sub,sup {
  font-size: 83%;
}

code,kbd,pre,samp {
  font-family: inherit;
}

q:after,q:before {
  content: none;
}

textarea {
  overflow: auto;
  resize: none;
}

label,summary {
  cursor: default;
}

a,button {
  cursor: pointer;
}

a,a:hover,del,ins,s,u {
  text-decoration: none;
  outline: 0;
}

@font-face {
  font-family: "Axis";
  src: url("../font/Axis/ultralight.woff") format('woff');
}

body,button,input,keygen,legend,select,textarea {
  font-size: .75rem;
  line-height: 1.5;
  color: #333;
  outline: 0;
  font-family: Axis, KozGoPr6N, 'Heiti SC'
}

input::-ms-clear,input::-ms-reveal {
  display: none;
}

:root * {
  //-webkit-filter: none !ie;
  //filter: none !ie
}

*,:after,:before {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  text-size-adjust: 100%;
}

* {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

html {
  -ms-touch-action: manipulation;
  touch-action: manipulation;
}

input {
  box-shadow: none;
}

video {
  width: 100%;
  height: auto;
}

::-webkit-input-placeholder {
  color: #999;
}

:-moz-placeholder {
  color: #999;
}

::-moz-placeholder {
  color: #999;
}

:-ms-input-placeholder {
  color: #999;
}
/*reset css end*/

/*common css start*/
.hide {
  display: none;
}
.container {
  max-width: map_get($global-width, pc);
  height: 100%;
  margin: 0 auto;
  padding: 0 map_get($global-padding, container);
}
.scroll {
  transition: all ease-in-out map_get($global-time, scroll);
  transform: translate(0,20px);
  opacity: 0;
}
.is_scoped {
  transform: translate(0,0);
  opacity: 1;
}
.main-wrap {
  max-width: map_get($global-width, pc);
  height: 100%;
  margin: 0 auto;
  padding: 0 map_get($global-padding, container);
}
/*common css end*/
/*common media start*/
@media screen and (min-width: map_get($global-width, pad)) {

}
/*common media end*/